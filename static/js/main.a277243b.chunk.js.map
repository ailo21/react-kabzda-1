{"version":3,"sources":["components/Freinds/FreindItem/FreindItem.module.css","asstes/img/user_nophoto_small.png","asstes/img/xopreload.gif","components/Common/Preloader/preloade.module.css","api/api.js","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","redux/redux-store.js","components/News/index.jsx","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Freinds/FreindItem/FreindItem.jsx","components/Freinds/FreindList/FreindList.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","util/object-helpers.js","redux/users-reducer.js","components/Common/Paginator/index.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","App.js","hoc/withSuspense.js","index.js","components/Common/FormsControls/FormsControls.js","components/Common/Preloader/index.js","components/Users/users.module.css","components/Common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","util/validators/validators.js","components/Common/Paginator/paginator.module.css","redux/profile-reducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","PageNum","pageSize","get","then","response","data","postFollow","userId","post","deleteFollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","reducer","News","initialState","dialogs","id","name","messages","message","dialogReducer","state","action","type","newMessageText","newText","newMessage","NewMessageText","DialogItem","props","path","className","s","dialog","active","to","Message","NewMessageTextReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","Dialogs","dialogsElement","dialogsPage","map","key","messagesElement","dialogsItems","formData","sandMessageText","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","updateNewMessageText","text","updateNewMessageTextActionCreator","addMessageActionCreator","Component","RedirirectComponent","this","React","FreindItem","freind","href","title","src","avatar","alt","FreindList","freindList","Navbar","freinds","siteBar","friends","nav","item","activeClassName","NavbarContainer","updateObjectInArray","items","itemId","objPropName","newObjProp","u","users","totalUserCount","currentPage","isFetching","FollowingProgress","followToggle","setUsers","setCurrentPage","setTotalUserCounter","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","apiMethod","a","resultCode","usersReducer","currentIsFollow","filter","f","followed","isFollowingProgress","Paginator","totalItemCount","onPageChanged","portionSize","useState","portion","setPortion","pagesCount","Math","ceil","leftNumber","rightNumber","goToLeftPortionDisabled","goToRightPortionDisabled","pages","i","push","useEffect","disabled","onClick","p","pager","pager_selected","User","user","unfollow","follow","user_left","photos","small","userNoPhotoSmall","some","user_right","Users","user_list","createSelector","userPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getIsFollowingProgress","UsersContainer","getUsersThunkCreator","Preloader","page","totalCount","Header","header","loginBlock","getAuthUserData","setAuthUserData","payload","authReducer","HeaderContainer","LogginReduxForm","createField","required","Input","error","formSummaryError","length","stopSubmit","_error","initialized","appReducer","sidebarReducer","combineReducers","profilePage","profileReducer","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleweare","ProfileContainer","lazy","App","initializeApp","exact","render","Suspense","fallback","DialogsContainer","AppContainer","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","validators","validate","preloader_block","Loader","value","maxLengthCreator","maxLength","addPostActionCreator","newPostText","setStatus","setUserProfile","profile","posts","likeCount","newPost","postId"],"mappings":"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","file":"static/js/main.a277243b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"freind\":\"FreindItem_freind__1JeIW\"};","module.exports = __webpack_public_path__ + \"static/media/user_nophoto_small.70f471b6.png\";","module.exports = __webpack_public_path__ + \"static/media/xopreload.0d0345f6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader_block\":\"preloade_preloader_block__1cbw_\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"4076e1db-ce97-44d8-b31d-4bf98670e9f8\"\r\n    }\r\n});\r\nexport const userAPI = {\r\n    getUsers(PageNum = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${PageNum}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    postFollow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    deleteFollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Please use profileAPI.getProfile\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\nexport const profileAPI={\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status){\r\n\r\n        return instance.put(`profile/status`,{status: status});\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data);\r\n    },\r\n    login(email, password, rememberMe=false){\r\n        return instance.post(`/auth/login`,{email, password, rememberMe})\r\n    },\r\n    logout(email, password, rememberMe=false){\r\n        return instance.delete(`/auth/login`,{email, password, rememberMe})\r\n    }\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__Q61Mq\",\"item\":\"Navbar_item__39jyT\",\"active\":\"Navbar_active__1cWOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3C8h9\",\"dialogsItems\":\"Dialogs_dialogsItems__2EVft\",\"active\":\"Dialogs_active__Md-K-\",\"dialog\":\"Dialogs_dialog__2h0n2\",\"messages\":\"Dialogs_messages__1BiEo\",\"message\":\"Dialogs_message__3iJHi\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleweare from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducer;\r\nreducer = combineReducers({\r\n    siteBar: sidebarReducer,\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    userPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer,  composeEnhancers(\r\n    applyMiddleware(thunkMiddleweare)\r\n));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleweare));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            news list\r\n        </div>\r\n    )\r\n}\r\nexport default News;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-EXT';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sasha'},\r\n        {id: 2, name: 'Andry'},\r\n        {id: 3, name: 'Stas'},\r\n        {id: 4, name: 'Nikol'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'Hi!'},\r\n        {id: 3, message: 'How a you>?'},\r\n        {id: 4, message: 'Thank, I`m fine, and you?'},\r\n        {id: 5, message: 'All right'},\r\n    ]\r\n}\r\n\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n          return{\r\n                ...state,\r\n                newMessageText: action.newText\r\n            };\r\n        case ADD_MESSAGE:\r\n            let newMessage = {id: 6, message: action.NewMessageText};\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n                newMessageText: ''\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addMessageActionCreator = (NewMessageText) => ({type: ADD_MESSAGE,NewMessageText})\r\nexport const updateNewMessageTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_MESSAGE_TEXT, newText: text})\r\n\r\nexport default dialogReducer;","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.message}</div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElement = props.dialogsPage.dialogs.map((dialog) => <DialogItem key={dialog.id} id={dialog.id}\r\n                                                                               name={dialog.name}/>)\r\n    let messagesElement = props.dialogsPage.messages.map((message) => <Message key={message.id} id={message.id}\r\n                                                                               message={message.message}/>)\r\n\r\n    let addNewMessage = (formData) => {\r\n        props.sandMessageText(formData.NewMessageText);\r\n    }\r\n\r\n    // let _handleKeyDown = (e) => {\r\n    //     if (e.key === 'Enter') {\r\n    //         props.sandMessageText();\r\n    //     }\r\n    // }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElement}\r\n            </div>\r\n\r\n            <div>\r\n                <NewMessageTextReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst NewMessageTextForm = (props) => {\r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={\"textarea\"} name={\"NewMessageText\"} placeholder=\"Enter text\"/>\r\n\r\n            </div>\r\n            <button type={\"submit\"}>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\nconst NewMessageTextReduxForm=reduxForm({form:\"NewMessageTextForm\"})(NewMessageTextForm)\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport  const withAuthRedirect=(Component)=>{\r\n    class RedirirectComponent extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    // let ConnectedAuthRedirectComponent=connect(mapStateToPropsForRedirect)(RedirirectComponent);\r\n    // return ConnectedAuthRedirectComponent;\r\n    return connect(mapStateToPropsForRedirect)(RedirirectComponent);\r\n}\r\n","import React from \"react\";\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        updateNewMessageText: (text) => {\r\n            dispatch(updateNewMessageTextActionCreator(text))\r\n        },\r\n        sandMessageText: (NewMessageText) => {\r\n            dispatch(addMessageActionCreator(NewMessageText));\r\n        }\r\n    }\r\n}\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Dialogs)\r\n","import React from \"react\";\r\nimport s from './FreindItem.module.css';\r\n\r\nconst FreindItem=(props)=>{\r\n    return(\r\n        <div className={s.freind} >\r\n            <a href={\"/freind/\"+props.state.id} title={props.state.name}>\r\n                <img src={props.state.avatar} alt={props.state.name}/>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\nexport default FreindItem;","import React from \"react\";\r\nimport FreindItem from \"../FreindItem/FreindItem\";\r\n\r\nconst FreindList=(props)=>{\r\n\r\n    let freindList=props.state.map((freind)=><FreindItem key={freind.id} state={freind}/>)\r\n    return(\r\n        <div>\r\n            <h5>Freinds</h5>\r\n            {freindList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FreindList;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FreindList from \"../Freinds/FreindList/FreindList\";\r\n\r\nconst Navbar = (props) => {\r\n// debugger;\r\n    let freinds = props.siteBar.friends;\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Mesage</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <FreindList state={freinds}/>\r\n        </nav>\r\n    )\r\n\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FreindList from \"../Freinds/FreindList/FreindList\";\r\nimport {connect} from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        siteBar:state.siteBar\r\n    }\r\n}\r\nlet  mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nconst NavbarContainer=connect(mapStateToProps,mapDispatchToProps)(Navbar);\r\nexport default NavbarContainer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProp) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProp}\r\n        }\r\n        return u;\r\n    })\r\n}","import {userAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../util/object-helpers\";\r\n\r\nconst FOLLOW_TOGGLE = 'FOLLOW_TOGGLE';\r\nconst SET_USER = 'SET_USER';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USER_COUNTER = 'SET_TOTAL_USER_COUNTER';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    FollowingProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW_TOGGLE:\r\n            let currentIsFollow = state.users.filter(f => f.id === action.userId)[0].followed;\r\n            debugger;\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\",{followed:!currentIsFollow})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: !u.followed}\r\n                //     }\r\n                //     return u;\r\n                // }),\r\n            }\r\n        case SET_USER:\r\n            return {...state, users: [...action.users]}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USER_COUNTER:\r\n            return {...state, totalUserCount: action.totalUserCount}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                isFollowingProgress: action.isFetching\r\n                    ? [...state.FollowingProgress, action.userId]\r\n                    : state.FollowingProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followToggle = (userId) => ({type: FOLLOW_TOGGLE, userId});\r\nexport const setUsers = (users) => ({type: SET_USER, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUserCounter = (totalUserCount) => ({type: SET_TOTAL_USER_COUNTER, totalUserCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsersThunkCreator = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page))\r\n        let data = await userAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUserCounter(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n\r\n    if (apiMethod.resultCode === 0) {\r\n        dispatch(followToggle(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId));\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = await userAPI.deleteFollow(userId);\r\n        await followUnfollowFlow(dispatch, userId, apiMethod);\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = await userAPI.postFollow(userId);\r\n        await followUnfollowFlow(dispatch, userId, apiMethod);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useEffect, useState} from \"react\";\r\nimport s from \"../Paginator/paginator.module.css\";\r\n\r\nlet Paginator = ({totalItemCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let [portion, setPortion] = useState(0);\r\n    let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n\r\n    let leftNumber = portion * portionSize + 1;\r\n    let rightNumber = leftNumber + portionSize-1;\r\n\r\n    let goToLeftPortionDisabled=portion<1;\r\n    let goToRightPortionDisabled=portion>=(pagesCount-1);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    useEffect(()=>{\r\n        onPageChanged(leftNumber);\r\n    },[leftNumber, onPageChanged, portionSize]);\r\n\r\n    return <div>\r\n        <button disabled={goToLeftPortionDisabled} onClick={() => {\r\n            setPortion(portion - 1);\r\n        }}>{'<'}сюда\r\n        </button>\r\n        {pages.filter(p => (p >= leftNumber && p <= rightNumber)).map(p => (\r\n                <span key={`pagin-${p}`} className={s.pager + ' ' + (currentPage === p ? s.pager_selected : '')}\r\n                      onClick={() => {\r\n                          onPageChanged(p)\r\n                      }}\r\n                >{p}</span>\r\n            )\r\n        )}\r\n        <button disabled={goToRightPortionDisabled} onClick={() => {\r\n            setPortion(portion + 1);\r\n        }}>туда{'>'}</button>\r\n    </div>\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport userNoPhotoSmall from \"../../asstes/img/user_nophoto_small.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user,isFollowingProgress,unfollow,follow}) => {\r\n\r\n    return <div  className={s.user}>\r\n        <div className={s.user_left}>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userNoPhotoSmall} alt=\"\"/>\r\n                </NavLink>\r\n\r\n            </div>\r\n            <div>\r\n                {user.followed ?\r\n                    <button disabled={isFollowingProgress?.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                unfollow(user.id);\r\n                            }}>unfollow</button>\r\n                    :\r\n                    <button disabled={isFollowingProgress?.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                follow(user.id);\r\n                            }}>follow</button>\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className={s.user_right}>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n            {/*<div>{user.location.country}</div>*/}\r\n            {/*<div>{user.location.city}</div>*/}\r\n        </div>\r\n    </div>\r\n}\r\nexport default User;","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport Paginator from \"../Common/Paginator/index\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({users, currentPage, totalUserCount, pageSize, onPageChanged, isFollowingProgress, follow, unfollow}) => {\r\n\r\n    return <div className={s.user_list}>\r\n        <Paginator currentPage={currentPage} totalItemCount={totalUserCount} pageSize={pageSize}\r\n                   onPageChanged={onPageChanged}/>\r\n        {users.map(u => <User key={u.id} user={u} isFollowingProgress={isFollowingProgress} follow={follow}\r\n                              unfollow={unfollow}/>)}\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.userPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\nexport const getPageSize = (state) => {\r\n    return state.userPage.pageSize;\r\n}\r\nexport const getTotalUserCount = (state) => {\r\n    return state.userPage.totalUserCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.userPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.userPage.isFetching;\r\n}\r\nexport const getIsFollowingProgress = (state) => {\r\n    return state.userPage.isFollowingProgress;\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    getUsersThunkCreator,\r\n    setCurrentPage,\r\n    setTotalUserCounter,\r\n    setUsers,\r\n    toggleIsFetching, toggleIsFollowingProgress, unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {compose} from \"redux\";\r\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/users-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (PageNum) => {\r\n        this.props.getUsersThunkCreator(PageNum, this.props.pageSize)\r\n\r\n    }\r\n    followToggle = (userId) => {\r\n        this.props.followToggle(userId);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                isFollowingProgress={this.props.isFollowingProgress}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                totalUserCount={this.props.totalUserCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n\r\n            />\r\n        </>\r\n\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.userPage.users,\r\n//         pageSize: state.userPage.pageSize,\r\n//         totalItemCount: state.userPage.totalItemCount,\r\n//         currentPage: state.userPage.currentPage,\r\n//         isFetching: state.userPage.isFetching,\r\n//         isFollowingProgress: state.userPage.isFollowingProgress,\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingProgress: getIsFollowingProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        //dispatch\r\n        {\r\n            unfollow,\r\n            follow,\r\n            setUsers,\r\n            setCurrentPage,\r\n            setTotalUserCounter,\r\n            toggleIsFetching,\r\n            toggleIsFollowingProgress,\r\n            getUsersThunkCreator\r\n        }\r\n    ),\r\n    // withAuthRedirect\r\n)(UsersContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://autodoktor.com.ua/wp-content/uploads/Logo/Total-logo-earth.png\" alt=\"\"/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>  :\r\n                    <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n\r\n}\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\nexport default authReducer;","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport Header from \"./Header\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {logout, setAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData,logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../util/validators/validators\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport s from \"../Common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LogginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n\r\n            {createField(\"Email\",\"email\",[required],Input)}\r\n            {createField(\"Password\",\"password\",[required],Input,{type:\"password\"})}\r\n            {createField(null,\"rememberMe\",null,Input,{type:\"checkbox\"},\"Remember me\")}\r\n            {props.error && <div className={s.formSummaryError}>{props.error}</div>}\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LogginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\nexport default connect(null, { login})(Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n    friends: [\r\n        {\r\n            id: 1,\r\n            name: 'Sasha',\r\n            avatar: 'https://media.sketchfab.com/avatars/6219c58d42ed493aa0e66f451bc96aa7/fc281472fd6f4727963123ead220bd89.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Andry',\r\n            avatar: 'https://img2.freepng.ru/20180326/lke/kisspng-web-development-computer-icons-avatar-business-use-profile-5ab94da7695485.6343143015220934794314.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Stas',\r\n            avatar: 'https://cdn.instructables.com/ORIG/FO9/YXKJ/ILS8YHWP/FO9YXKJILS8YHWP.png?crop=1%3A1&amp;frame=1&amp;width=320'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Nikol',\r\n            avatar: 'https://img-fotki.yandex.ru/get/38067/136583709.b0/0_10fc55_23501bed_XL.png'\r\n        },\r\n    ]\r\n};\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport News from \"./components/News\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/Common/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst ProfileContainer=React.lazy(()=> import(\"./components/Profile/ProfileContainer\"))\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        } else\r\n            return (\r\n\r\n                <div className=\"app-wrapper\">\r\n                    <HeaderContainer/>\r\n                    <NavbarContainer store={this.props.store}/>\r\n                    <div className=\"app-wrpper-comtent\">\r\n\r\n                        <Route exact path='/dialogs' render={() => {\r\n                            return <React.Suspense fallback={<div>Loading...</div>}>\r\n                                <DialogsContainer\r\n                                    store={this.props.store}\r\n                                />\r\n                            </React.Suspense>\r\n                        }}/>\r\n                        <Route path='/profile/:userId?'\r\n                               render={withSuspense(ProfileContainer)}/>\r\n                        <Route path='/news' component={News}/>\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({initialized: state.app.initialized})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <Provider store={store}>\r\n        <BrowserRouter>\r\n            <AppContainer/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n}\r\nexport default SamuraiJSApp;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../components/Common/Preloader\";\r\n\r\n\r\nexport  const withSuspense=(Component)=>{\r\n    return (props)=>{\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from \"react-dom\";\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport s from './FormsControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst  FormControl=({input,meta,child,...props})=>{\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error} </span>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta,child,...restProps}=props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta,child,...restProps}=props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport  const createField=(placeholder,name,validators,component,props={},text=\"\")=>(\r\n    <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        />{text}\r\n    </div>\r\n)","import Loader from \"../../../asstes/img/xopreload.gif\";\r\nimport React from \"react\";\r\nimport s from \"./preloade.module.css\";\r\n\r\nlet Preloader=()=>{\r\n    return(\r\n        <div className={s.preloader_block}>\r\n            <img src={Loader} alt={'loading...'}/>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_list\":\"users_user_list__1Ln_x\",\"user\":\"users_user__Kn4WK\",\"user_left\":\"users_user_left__3rVL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3d6jX\",\"error\":\"FormsControls_error__cjUJe\",\"formSummaryError\":\"FormsControls_formSummaryError__2pmLm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2pW8B\",\"loginBlock\":\"Header_loginBlock___RfKX\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) =>(value)=> {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pager\":\"paginator_pager__1Xz_m\",\"pager_selected\":\"paginator_pager_selected__2ZTbW\"};","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likeCount: 5},\r\n        {id: 2, message: 'Ary you ready?', likeCount: 0},\r\n        {id: 3, message: 'It`s my first post', likeCount: 2},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default profileReducer;"],"sourceRoot":""}