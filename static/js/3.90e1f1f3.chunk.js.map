{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","stateEditMode","status","setStatus","useEffect","onDoubleClick","type","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","fullName","lookingForAJob","lookingForAJobDescription","Preloader","Post","item","message","likesCount","MyPosts","memo","postsElement","posts","map","post","key","id","likeCount","postsBlock","PostReduxForm","onSubmit","formData","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","action","handleSubmit","Field","component","Textarea","name","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizeUserId","history","push","userAPI","getProfile","then","data","setUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,iBAAmB,wC,oBCArCD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,kICCvCC,IAAMC,U,QC6CnBC,EA7CgB,SAACC,GAAW,IAAD,EAENC,oBAAS,GAFH,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASD,EAAMI,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAKtCC,qBAAU,WACND,EAAUL,EAAMI,UAClB,CAACJ,EAAMI,SAaT,OACI,8BAESF,GACD,6BACI,yBAAKK,cAhBA,WACjBJ,GAAc,KAiBMH,EAAMI,QAAU,qDAK5BF,GAAY,6BACR,2BAAOM,KAAK,OACLC,OAtBG,WACtBN,GAAc,GACdH,EAAMU,aAAaN,IAqBAO,SAnBD,SAACC,GAEnBP,EAAUO,EAAEC,cAAcC,QAkBPA,MAAOV,OCZnBW,EAnBK,SAACf,GACjB,OAAKA,EAAMgB,QAKP,6BAEI,yBAAKC,UAAWC,IAAEC,kBAAlB,qBACA,yBAAKC,IAAKpB,EAAMgB,QAAQK,OAAOC,MAAOC,IAAI,KAC1C,kBAAC,EAAD,CAAwBnB,OAAQJ,EAAMI,OAASM,aAAcV,EAAMU,eACnE,4BAAKV,EAAMgB,QAAQQ,UAEfxB,EAAMgB,QAAQS,eACV,uFAAe,8BAAOzB,EAAMgB,QAAQU,4BAAwC,qGAZjF,kBAACC,EAAA,EAAD,O,kBCKAC,EAXF,SAAC5B,GACV,OACI,yBAAKiB,UAAWC,IAAEW,MACd,yBAAKT,IAAI,mFAAmFG,IAAI,KAChG,2BAAIvB,EAAM8B,SACV,6BACI,uCAAa9B,EAAM+B,e,2DCD7BC,EAAUnC,IAAMoC,MAAK,SAAAjC,GACnB,IAAIkC,EACAlC,EAAMmC,MAAMC,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAMC,IAAKD,EAAKE,GAAIT,QAASO,EAAKP,QAASC,WAAYM,EAAKG,eAO1F,OACI,yBAAKvB,UAAWC,IAAEuB,YACd,wCACA,6BACI,kBAACC,EAAD,CAAeC,SARV,SAACC,GACd5C,EAAM6C,QAAQD,EAASE,iBASlBZ,MAKba,EAAcC,YAAiB,IAgB7BN,EAAgBO,YAAU,CAACC,KAAM,YAAjBD,EAfL,SAACjD,GACd,OACI,0BAAMmD,OAAO,GAAGR,SAAU3C,EAAMoD,cAC5B,6BACI,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACXC,KAAM,cACNC,SAAU,CAACC,IAAUX,MAE7B,6BACI,4BAAQvC,KAAM,UAAd,iBAMDwB,I,QCvBA2B,EADUC,aAfH,SAACC,GACnB,MAAO,CACH1B,MAAO0B,EAAMC,YAAY3B,MACzBW,YAAYe,EAAMC,YAAYhB,gBAGb,SAACiB,GACtB,MAAO,CACHlB,QAAS,SAACC,GACNiB,EAASC,YAAqBlB,QAMjBc,CAA6C5B,GCFvDiC,EAXC,SAACjE,GAEb,OACI,6BACI,kBAAC,EAAD,CAAagB,QAAShB,EAAMgB,QAASZ,OAAQJ,EAAMI,OAAQM,aAAcV,EAAMU,eAC/E,kBAAC,EAAD,CACIwD,MAAOlE,EAAMkE,U,sBCNvBC,E,kLACmB,IAAD,OACZC,EAASC,KAAKrE,MAAMsE,MAAMC,OAAOH,OAEjCA,IACAA,EAAOC,KAAKrE,MAAMwE,kBAEdH,KAAKrE,MAAMyE,QAAQC,KAAK,UAGhCC,IAAQC,WAAWR,GAAQS,MAAK,SAAAC,GAC5B,EAAK9E,MAAM+E,eAAeD,MAE9BT,KAAKrE,MAAMgF,UAAUZ,K,+BAIrB,OACI,kBAAC,EAAD,iBAAaC,KAAKrE,MAAlB,CAAyBgB,QAASqD,KAAKrE,MAAMgB,QAASZ,OAAQiE,KAAKrE,MAAMI,OAAQM,aAAc2D,KAAKrE,MAAMU,oB,GAlBvFb,IAAMC,WA8BtBmF,sBACXrB,aARkB,SAACC,GAAD,MAAY,CAC9B7C,QAAS6C,EAAMC,YAAY9C,QAC3BZ,OAAQyD,EAAMC,YAAY1D,OAC1BoE,gBAAiBX,EAAMqB,KAAKd,OAC5Be,OAAQtB,EAAMqB,KAAKC,UAIK,CAAEJ,mBAAeC,cAAUtE,mBACnD0E,IAFWH,CAIbd","file":"static/js/3.90e1f1f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__tEXZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1rjeJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__19m-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__Dqwdw\",\"posts\":\"MyPosts_posts__2-sM9\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deActiveEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status!==this.props.status){\r\n            this.setState(\r\n                {status:this.props.status}\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.editMode ?\r\n                        <div>\r\n                            <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActiveEditMode}\r\n                                   type=\"text\" value={this.state.status}/>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <span onDoubleClick={this.activeEditMode}>\r\n                                {\r\n                                    this.props.status || <i>set a status message</i>\r\n                                }</span>\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, stateEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    const activateMode = () => {\r\n        stateEditMode(true)\r\n    }\r\n    const  deActiveEditMode = () => {\r\n        stateEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n    const  onStatusChange=(e)=>{\r\n        debugger;\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                !editMode &&\r\n                <div>\r\n                    <div onDoubleClick={activateMode}>\r\n                        {\r\n                            props.status || <i>set a status message</i>\r\n                        }</div>\r\n                </div>\r\n            }\r\n            {\r\n                editMode && <div>\r\n                    <input type=\"text\"\r\n                           onBlur={deActiveEditMode}\r\n                           onChange={onStatusChange}\r\n                           value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader\";\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n// import {updateStatus} from \"../../../redux/profile-reducer\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            <div className={s.descriptionBlock}>ava + description</div>\r\n            <img src={props.profile.photos.large} alt=\"\"/>\r\n            <ProfileStatusWithHooks status={props.status}  updateStatus={props.updateStatus}/>\r\n            <h4>{props.profile.fullName}</h4>\r\n            {\r\n                props.profile.lookingForAJob ?\r\n                    <p>Ищу работу: <span>{props.profile.lookingForAJobDescription}</span></p> : <p>Не ищу работу.</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props ) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://i.pinimg.com/736x/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64--youtube.jpg\" alt=\"\"/>\r\n            <p>{props.message}</p>\r\n            <div>\r\n                <span>like: {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\n// import {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../util/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n        let postsElement =\r\n            props.posts.map((post) => <Post key={post.id} message={post.message} likesCount={post.likeCount}/>)\r\n\r\n\r\n        let addNewPost = (formData) => {\r\n            props.addPost(formData.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <div>\r\n                    <PostReduxForm onSubmit={addNewPost}/>\r\n                </div>\r\n                {postsElement}\r\n            </div>\r\n        )\r\n    }\r\n)\r\nlet maxLength10 = maxLengthCreator(10);\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={'newPostText'}\r\n                    validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button type={'submit'}>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nconst PostReduxForm = reduxForm({form: \"PostForm\"})(PostForm);\r\nexport default MyPosts;","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText:state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {updateStatus} from \"../../redux/profile-reducer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer\r\n                store={props.store}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, setUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {userAPI} from \"../../api/api\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        var userId = this.props.match.params.userId\r\n        // userId = userId ?? 2;\r\n        if(!userId){\r\n            userId=this.props.authorizeUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        userAPI.getProfile(userId).then(data => {\r\n            this.props.setUserProfile(data);\r\n        });\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizeUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{ setUserProfile,getStatus,updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}